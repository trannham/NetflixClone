{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SNAART\\\\Desktop\\\\ReactNative\\\\NetflixClone\\\\screens\\\\MovieDetailsScreen\\\\index.tsx\";\n\nimport React, { useState } from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Picker } from '@react-native-picker/picker';\nimport { MaterialIcons, Entypo, AntDesign, Feather, FontAwesome } from '@expo/vector-icons';\nimport { Text, View } from \"../../components/Themed\";\nimport styles from \"./styles\";\nimport movie from \"../../assets/data/movie\";\nimport EpisodeItem from \"../../components/EpisodeItem\";\nimport VideoPlayer from \"../../components/VideoPlayer\";\nvar firstSeason = movie.seasons.items[0];\nvar firstEpisode = firstSeason.episodes.items[0];\n\nvar MoviewDetailsScreen = function MoviewDetailsScreen() {\n  var _useState = useState(firstSeason),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentSeason = _useState2[0],\n      setCurrentSeason = _useState2[1];\n\n  var _useState3 = useState(firstSeason.episodes.items[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentEpisode = _useState4[0],\n      setCurrentEpisode = _useState4[1];\n\n  var seasonNames = movie.seasons.items.map(function (season) {\n    return season.name;\n  });\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(VideoPlayer, {\n    episode: currentEpisode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    data: currentSeason.episodes.items,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(EpisodeItem, {\n        episode: item,\n        onPress: setCurrentEpisode,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      });\n    },\n    style: {\n      marginBottom: 250\n    },\n    ListHeaderComponent: React.createElement(View, {\n      style: {\n        padding: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, movie.title), React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.match,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, \"98% match\"), React.createElement(Text, {\n      style: styles.year,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, movie.year), React.createElement(View, {\n      style: styles.ageContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: styles.age,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    }, \"12+\")), React.createElement(Text, {\n      style: styles.year,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, movie.numberOfSeasons, \" Seasons\"), React.createElement(MaterialIcons, {\n      name: \"hd\",\n      size: 24,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    })), React.createElement(Pressable, {\n      onPress: function onPress() {\n        console.warn('Plage');\n      },\n      style: styles.playButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.playButtonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, React.createElement(Entypo, {\n      name: \"controller-play\",\n      size: 16,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }), \"Play\")), React.createElement(Pressable, {\n      onPress: function onPress() {\n        console.warn('Download');\n      },\n      style: styles.downloadButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.downloadButtonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, React.createElement(AntDesign, {\n      name: \"download\",\n      size: 16,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }), ' ', \"Download\")), React.createElement(Text, {\n      style: {\n        marginVertical: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, movie.plot), React.createElement(Text, {\n      style: styles.year,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, \"Cast: \", movie.cast), React.createElement(Text, {\n      style: styles.year,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, \"Creator: \", movie.creator), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        marginTop: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: {\n        alignItems: 'center',\n        marginHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, React.createElement(AntDesign, {\n      name: \"plus\",\n      size: 24,\n      color: 'white',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }), React.createElement(Text, {\n      style: {\n        color: 'darkgrey',\n        marginTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }, \"My List\")), React.createElement(View, {\n      style: {\n        alignItems: 'center',\n        marginHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, React.createElement(Feather, {\n      name: \"thumbs-up\",\n      size: 24,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }), React.createElement(Text, {\n      style: {\n        color: 'darkgrey',\n        marginTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }, \"Rate\")), React.createElement(View, {\n      style: {\n        alignItems: 'center',\n        marginHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, React.createElement(FontAwesome, {\n      name: \"send-o\",\n      size: 24,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }), React.createElement(Text, {\n      style: {\n        color: 'darkgrey',\n        marginTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, \"Share\"))), React.createElement(Picker, {\n      selectedValue: currentSeason.name,\n      onValueChange: function onValueChange(itemValue, itemIndex) {\n        setCurrentSeason(movie.seasons.items[itemIndex]);\n      },\n      style: {\n        color: 'white',\n        width: 130\n      },\n      dropdownIconColor: 'white',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, seasonNames.map(function (seasonName) {\n      return React.createElement(Picker.Item, {\n        label: seasonName,\n        value: seasonName,\n        key: seasonName,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }\n      });\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default MoviewDetailsScreen;","map":{"version":3,"sources":["C:/Users/SNAART/Desktop/ReactNative/NetflixClone/screens/MovieDetailsScreen/index.tsx"],"names":["React","useState","Picker","MaterialIcons","Entypo","AntDesign","Feather","FontAwesome","Text","View","styles","movie","EpisodeItem","VideoPlayer","firstSeason","seasons","items","firstEpisode","episodes","MoviewDetailsScreen","currentSeason","setCurrentSeason","currentEpisode","setCurrentEpisode","seasonNames","map","season","name","item","marginBottom","padding","title","flexDirection","match","year","ageContainer","age","numberOfSeasons","console","warn","playButton","playButtonText","downloadButton","downloadButtonText","marginVertical","plot","cast","creator","marginTop","alignItems","marginHorizontal","color","itemValue","itemIndex","width","seasonName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Image, Pressable, FlatList } from 'react-native';\r\nimport {Picker} from '@react-native-picker/picker';\r\nimport { MaterialIcons, Entypo, AntDesign, Ionicons, Feather, FontAwesome } from '@expo/vector-icons'; \r\nimport { Text, View } from '../../components/Themed';\r\nimport styles from './styles';\r\n\r\nimport movie from '../../assets/data/movie';\r\nimport EpisodeItem from '../../components/EpisodeItem';\r\nimport VideoPlayer from '../../components/VideoPlayer';\r\n\r\nconst firstSeason = movie.seasons.items[0];\r\nconst firstEpisode = firstSeason.episodes.items[0];\r\n\r\nconst MoviewDetailsScreen = () => {\r\n    const [currentSeason, setCurrentSeason] = useState(firstSeason);\r\n    const [currentEpisode, setCurrentEpisode] = useState(firstSeason.episodes.items[0]);\r\n    const seasonNames = movie.seasons.items.map(season => season.name);\r\n\r\n    return (\r\n        <View>\r\n            <VideoPlayer episode={currentEpisode} />            \r\n            <FlatList\r\n                data={currentSeason.episodes.items}\r\n                renderItem={({ item }) => (\r\n                    <EpisodeItem \r\n                    episode={item} \r\n                    onPress={setCurrentEpisode}\r\n                />)}\r\n                style={{ marginBottom: 250 }}\r\n                ListHeaderComponent={(\r\n                    <View style={{ padding: 12 }}>\r\n                        <Text style={styles.title}>{movie.title}</Text>\r\n                        <View style={{flexDirection: 'row'}}>\r\n                            <Text style={styles.match}>98% match</Text>\r\n                            <Text style={styles.year}>{movie.year}</Text>\r\n                            <View style={styles.ageContainer}>\r\n                                <Text style={styles.age}>12+</Text>\r\n                            </View>\r\n                            <Text style={styles.year}>{movie.numberOfSeasons} Seasons</Text>\r\n                            <MaterialIcons name=\"hd\" size={24} color=\"white\" />\r\n                        </View>\r\n\r\n                        {/* Play Button */}\r\n                        <Pressable onPress={() => { console.warn('Plage')}} style={styles.playButton}>\r\n                            <Text style={styles.playButtonText}>\r\n                                <Entypo name=\"controller-play\" size={16} color=\"black\" />\r\n                                Play\r\n                            </Text>\r\n                        </Pressable>\r\n\r\n                        {/* Download Button */}\r\n                        <Pressable onPress={() => { console.warn('Download')}} style={styles.downloadButton}>\r\n                            <Text style={styles.downloadButtonText}>\r\n                                <AntDesign name=\"download\" size={16} color=\"white\" />\r\n                                {' '}\r\n                                Download\r\n                            </Text>\r\n                        </Pressable>\r\n\r\n                        <Text style={{ marginVertical: 10 }}>{movie.plot}</Text>\r\n                        <Text style={styles.year}>Cast: {movie.cast}</Text>\r\n                        <Text style={styles.year}>Creator: {movie.creator}</Text>\r\n                    \r\n                        {/* Row with icon buttons */}\r\n                        <View style={{flexDirection: 'row', marginTop: 20,}}>\r\n                            <View style={{alignItems: 'center', marginHorizontal: 20}}>\r\n                                <AntDesign name=\"plus\" size={24} color={'white'} />\r\n                                <Text style={{color: 'darkgrey', marginTop: 5}}>My List</Text>\r\n                            </View>\r\n\r\n                            <View style={{alignItems: 'center', marginHorizontal: 20}}>\r\n                                <Feather name=\"thumbs-up\" size={24} color=\"white\" />\r\n                                <Text style={{color: 'darkgrey', marginTop: 5}}>Rate</Text>\r\n                            </View>\r\n\r\n                            <View style={{alignItems: 'center', marginHorizontal: 20}}>\r\n                                <FontAwesome name=\"send-o\" size={24} color=\"white\" />\r\n                                <Text style={{color: 'darkgrey', marginTop: 5 }}>Share</Text>\r\n                            </View>\r\n                        </View>\r\n\r\n                        <Picker\r\n                            selectedValue={currentSeason.name}\r\n                            onValueChange={(itemValue, itemIndex) => {\r\n                                setCurrentSeason(movie.seasons.items[itemIndex])\r\n                            }}\r\n                            style={{color: 'white', width: 130 }}\r\n                            dropdownIconColor={'white'}\r\n                        >\r\n                            {seasonNames.map(seasonName => (\r\n                                <Picker.Item label={seasonName} value={seasonName} key={seasonName} />\r\n                            ))}\r\n                        </Picker>\r\n                    </View>\r\n                )}\r\n            />\r\n        </View>\r\n    )\r\n};\r\n\r\nexport default MoviewDetailsScreen;\r\n"]},"metadata":{},"sourceType":"module"}